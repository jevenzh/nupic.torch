# ----------------------------------------------------------------------
# Numenta Platform for Intelligent Computing (NuPIC)
# Copyright (C) 2019, Numenta, Inc.  Unless you have an agreement
# with Numenta, Inc., for a separate license for this software code, the
# following terms and conditions apply:
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero Public License version 3 as
# published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU Affero Public License for more details.
#
# You should have received a copy of the GNU Affero Public License
# along with this program.  If not, see http://www.gnu.org/licenses.
#
# http://numenta.org/licenses/
version: 2

jobs:
  validate_contributor:
    working_directory: ~/nta/nupic.torch
    machine: true
    steps:
      - checkout
      - run:
          name: Validate contributor license
          command: ci/validate-contributor.sh
      - persist_to_workspace:
          root: ~/nta
          paths: nupic.torch

  install_dependencies:
    working_directory: ~/nta/nupic.torch
    docker:
      - image: circleci/python:3.6
    steps:
      - attach_workspace:
          at: ~/nta
      - restore_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
      - run: pip install --user flake8-formatter-junit-xml
      - run: pip install --user -r requirements-dev.txt -r requirements.txt
      - run: python setup.py install --user
      - save_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
          paths:
            - ~/.local

  check_style:
    working_directory: ~/nta/nupic.torch
    docker:
      - image: circleci/python:3.6
    steps:
      - attach_workspace:
          at: ~/nta
      - restore_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
      - run:
          name: Check Style
          command: |
            mkdir -p test_results/flake8
            ~/.local/bin/flake8 --show-source --format junit-xml --output-file test_results/flake8/results.xml  nupic tests examples
      - store_test_results:
          path: test_results

  test:
    working_directory: ~/nta/nupic.torch
    docker:
      - image: circleci/python:3.6
    steps:
      - attach_workspace:
          at: ~/nta
      - restore_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
      - run:
          name: Run python tests
          environment:
            PYTEST_ADDOPTS: --junitxml=test_results/pytest/results.xml --verbose
          command: |
            mkdir -p test_results/pytest
            python setup.py test
      - store_test_results:
          path: test_results

  build:
    working_directory: ~/nta/nupic.torch
    docker:
      - image: circleci/python:3.6
    steps:
      - attach_workspace:
          at: ~/nta
      - restore_cache:
          key: pip-cache-v1-{{ arch }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements-dev.txt" }}
      - run:
          name: Build wheel
          environment:
            VERBOSE: 1
          command: |
            python setup.py bdist_wheel
            python setup.py --version > dist/VERSION
      - store_artifacts:
          path: dist
      - persist_to_workspace:
          root: ~/nta
          paths: nupic.torch/dist

  deploy:
    working_directory: ~/nta/nupic.torch
    docker:
      - image: circleci/python:3.6
    steps:
      - attach_workspace:
          at: ~/nta
      - run:
          name: Validate Version
          command: |
            MY_VERSION=$(<dist/VERSION)
            if [ "$MY_VERSION" != "$CIRCLE_TAG" ]; then
              echo "Package version does not match release tag."
              echo "Found release tag $CIRCLE_TAG but expected $MY_VERSION"
              exit 1;
            fi
      - run:
          name: Deploy to PYPI
          environment:
            VERBOSE: 1
          command: |
            pip install twine --user
            python -m twine upload dist/nupic.torch-$CIRCLE_TAG-*.whl
workflows:
  version: 2

  validate-build-test:
    jobs:
      - validate_contributor:
          filters:
            tags:
              only: &release_tags /\d+(\.\d+){2}/
      - install_dependencies:
          requires:
            - validate_contributor
          filters:
            tags:
              only: *release_tags
      - check_style:
          requires:
            - install_dependencies
          filters:
            tags:
              only: *release_tags
      - test:
          requires:
            - install_dependencies
          filters:
            tags:
              only: *release_tags
      - build:
          filters:
            tags:
              only: *release_tags
          requires:
            - check_style
            - test
      - deploy:
          context: deploy-pypi
          requires:
            - build
          filters:
            tags:
              only: *release_tags
            branches:
              ignore: /.*/
